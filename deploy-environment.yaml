- name: Create output directory on all hosts
  hosts: all
  tasks:
    - import_tasks: ansible/tasks/output_dir.yaml

- name: Install and configure LXD on the host.
  hosts: hypervisor
  become: true
  roles:
    - role: ansible/roles/lxd

- name: Deploy MAAS server
  hosts: hypervisor
  become: true
  roles:
    - role: ansible/roles/maas
      vars:
        maas_user: "{{ maas.user }}"
        maas_password: "{{ maas.password }}"

- name: Add MAAS client to localhost
  hosts: localhost
  tasks:
    - name: Install MAAS snap
      snap:
        name: maas
      become: true

    - name: Login to MAAS
      import_role:
        name: ansible/roles/maas
        tasks_from: login.yaml
      vars:
        maas_user: "{{ maas.user }}"
        maas_url: "{{hostvars[groups.hypervisor[0]]['maas_url']}}"
        maas_apikey: "{{hostvars[groups.hypervisor[0]]['maas_apikey']}}"

- name: Skip MAAS intro
  hosts: localhost
  tasks:
    - shell: maas {{ maas.user }} maas set-config name=completed_intro value=true

- name: Register LXD VM host on MAAS
  hosts: hypervisor
  tasks:
    - import_role:
        name: ansible/roles/maas
        tasks_from: add-lxd-vm-host.yaml
      vars:
        name: hypervisor
        maas_user: "{{ maas.user }}"
        lxd_address: "{{ maas_ip }}:8443"

- name: Configure the networks in MAAS
  hosts: localhost
  tasks:
    - name: Configure MAAS global upstream DNS
      shell: |
        maas {{ maas.user }} maas set-config \
          name=upstream_dns \
          value="{{ upstream_dns | join(" ") }}"
      when: upstream_dns is defined

    - name: "Configure network on MAAS"
      include_role:
        name: ansible/roles/maas
        tasks_from: configure-network.yaml
      vars:
        network: "{{ item }}"
      with_items: "{{ networks }}"

- name: Configure the Ubuntu images on MAAS
  hosts: localhost
  tasks:
    - include_role:
        name: ansible/roles/maas
        tasks_from: configure-boot-source-selections.yaml
      vars:
        release: "{{ item }}"
      with_items: "{{ ubuntu_series }}"

- name: Configure the MAAS cloud in Juju
  hosts: localhost
  tasks:
    - import_role:
        name: ansible/roles/juju
      vars:
        maas_user: "{{ maas.user }}"
        maas_apikey: "{{ maas_apikey }}"
        maas_url: "{{ maas_url }}"
        juju_cloud: "{{ env_name }}"
        juju_channel: "2.9/stable"

- name: Deploy the VMs
  hosts: localhost
  tasks:
    - name: Deploy the VMs
      terraform:
        project_path: "{{ playbook_dir }}/terraform/maas-machines"
        force_init: true
        complex_vars: true
        variables:
          maas_api_url: "{{ maas_url }}"
          maas_api_key: "{{ maas_apikey }}"
          maas_vm_host_id: "{{ vmhost.id }}"
          machines: "{{ machines }}"
          networks: "{{ networks }}"

- name: Deploy Landscape
  hosts: localhost
  roles:
    - role: ansible/roles/environments/landscape
      vars:
        model_series: jammy
        juju_cloud: "{{ env_name }}"
        admin_user: admin
        admin_password: password
        maas_user: "{{ maas.user }}"

- name: Generate the landscape-client overlay for the OpenStack model
  hosts: localhost
  tasks:
    - import_role:
        name: ansible/roles/environments/landscape
        tasks_from: landscape-client.yaml
      vars:
        juju_model: openstack
        client_config:
          account-name: standalone
          url: "https://{{ landscape_api.fqdn }}/message-system"
          ping-url: "http://{{ landscape_api.fqdn }}/ping"
          ssl-public-key: "base64:{{ landscape_api.ssl_ca_cert | b64encode }}"
        relate_to:
          - cinder
          - easyrsa
          - etcd
          - glance
          - keystone
          - memcached
          - mysql
          - neutron-api
          - nova-cloud-controller
          - nova-compute
          - ovn-central
          - placement
          - rabbitmq-server
          - vault

- name: Deploy OpenStack
  hosts: localhost
  roles:
    - role: ansible/roles/environments/openstack
      vars:
        vip_addr_start: "{{ networks[0].reserved_ranges[0].start }}"
        extra_deploy_args: "--overlay {{ landscape_client_bundle.dest | realpath }}"
