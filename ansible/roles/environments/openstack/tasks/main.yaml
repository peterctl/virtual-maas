- import_tasks: "{{ playbook_dir }}/ansible/tasks/output_dir.yaml"

- name: Clone the stsstack-bundles repo
  git:
    repo: https://github.com/canonical/stsstack-bundles.git
    dest: "{{ output_dir }}/stsstack-bundles"

- name: Install the OpenStack clients
  apt:
    pkg:
      - python3-openstackclient
      - python3-keystoneclient
      - python3-neutronclient
  become: true

- name: Generate the OpenStack bundle
  shell:
    cmd: |
      ./generate-bundle.sh \
        --name openstack \
        --default-binding mgmt \
        --model-constraints tags=openstack \
        --ceph \
        --hyperconverged \
        --ha \
        --vault-ha \
        --rabbitmq-server-ha \
        --num-compute {{ vm_count }} \
        --vip-addr-start {{ vip_addr_start }} \
        {{ extra_openstack_bundle_args }}
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"

- name: Amend the generated bundle
  shell:
    cmd: |
      # Remove the `storage` definition under nova-compute.
      yq -i 'del(.applications[].storage)' b/openstack/openstack.yaml
      # Enable HA for ceph-mon and set the osd-devices config.
      yq -i '
          .applications["ceph-mon"].to = ["lxd:0", "lxd:1", "lxd:2"]
        ' b/openstack/unit-placement.yaml
      yq -i '
          .applications["ceph-mon"].num_units = 3 |
          .applications["ceph-mon"].options["monitor-count"] = 3 |
          .applications["ceph-osd"].options["osd-devices"] = env(OSD_DEVICES)
        ' b/openstack/o/ceph/ceph.yaml
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
  environment: "{{ openstack_configure_env }}"

- name: Deploy the bundle
  shell:
    cmd: $(cat b/openstack/command) {{ extra_deploy_args }}
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
    executable: /bin/bash

- name: Wait for Vault to be ready to initialize
  shell:
    cmd: "{{ playbook_dir }}/scripts/vault-wait-ready.sh"
    executable: /bin/bash
  register: vault_waitready

- name: Initialize Vault
  shell:
    cmd: ./tools/vault-unseal-and-authorise.sh
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
    executable: /bin/bash
  when: "'ready_to_init' in vault_waitready.stdout"

- name: Wait for the OpenStack API to be ready
  shell:
    cmd: "{{ playbook_dir }}/scripts/openstack-api-wait-ready.sh {{ item }}"
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
    executable: /bin/bash
  with_items:
    - keystone
    - keystone-hacluster
    - neutron-api
    - neutron-api-hacluster
    - nova-cloud-controller
    - nova-cloud-controller-hacluster

- name: Configure the deployed environment
  shell:
    cmd: |
      source novarc
      ./configure metal
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
    executable: /bin/bash
  environment: "{{ openstack_configure_env }}"

- name: Grab the Vault root CA cert
  shell:
    cmd: |
      bash {{ playbook_dir }}/scripts/vault-get-root-ca.sh >{{ output_dir }}/vault-root-ca.crt

- name: Collect the OpenStack novarc credentials
  shell:
    cmd: |
      source novarc >/dev/null
      env | grep '^OS_' | sed 's/^/export /'
      echo export OS_CACERT={{ output_dir }}/vault-root-ca.crt
    chdir: "{{ output_dir }}/stsstack-bundles/openstack"
    executable: /bin/bash
  register: novarc_cmd

- name: Save the OpenStack novarc credentials
  copy:
    dest: "{{ output_dir }}/novarc"
    content: "{{ novarc_cmd.stdout }}"
